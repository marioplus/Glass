steam.styles {

    include "resource/styles/color.styles"

    include "includes/colors.styles"
    include "includes/background.layout"
    include "includes/font/family.styles"

    include "resource/layout/scrollBar.layout"

    colors {
        // colors section can include colors in "R G B A" form, or references to already defined colors;
        // it can also include just general settings controls can pull from for extra customization

        myMainBG = "38 50 56 255"  // 主背景
        mySecBG = "25 34 39 255" // 副背景
        myDivider = "16 21 24 255" // 分割线

        // 滚动条
        myScrollBarBg=none
        myScrollBarBgHover=myColorA
        myScrollBarBgActive=myColorA

        // 游戏预览图
        myHerderImage=myDivider
        myHerderImage1=myDivider

        // 游戏名称
        myGameName=myColorL

        // 开始游戏按钮
        myLaunchBtn=myMainBG
        // 开始游戏下面的三行
        myGameDetailsLabel=myColor
        myGameDetailsValue=myColorL
        // 右侧的链接
        myRightColumnLink=myColorL
        myRightColumnLink.hover=myColorD
        myRightColumnLink.disabled=myColorD

        // 游戏详情子面板
        myGameDetailsChildPanel.title=myColor
        myGameDetailsChildPanel.content=myColorL

        // 查看全部玩过此游戏的好友、查看全部成就
        myAllBtnText=myAccent1
        myAllBtnText.hover=myAccent1
        myAllBtnBg=myColor
        myAllBtnBg.hover=myColorD

        // 成就
            // 进度条
            myAchievementsProgressBar.get=myColor
            myAchievementsProgressBar.all=myColorA


        // DLC 列表头
        myGameDetailsDLCHeader=myColor

        // 按钮
        myBtnText=myColor
        myBtnText.hover=myAccent1
        myBtnText.active=myAccent1
        myBtnText.disabled=myAccent3
        myBtnBg=none
        myBtnBg.hover=myColor
        myBtnBg.active=myColorAL
        myBtnBg.disabled=none
        myBtnBgBorder=none
        myBtnBgBorder.hover=myColor
        myBtnBgBorder.active=myColorAD
        myBtnBgBorder.disabled=none

        // 游戏列表
            // 列表组文字颜色
            myGameListGroup=myColor
            // 列表项文字颜色
            myGameListItem=white
            myGameListItem.hover=myColor
            myGameListItem.selected=myColor
            myGameListItem.install=myAccent1
            myGameListItem.un_install=myAccent3

        // 下载页面
            // 下载详情
            myDownloadSummary.title=myColor
            myDownloadSummary.content=myColorL
            myDownloadSummary.speed=myAccent1
            myDownloadSummary.disk="7 168 39 255"
            myDownloadSummary.net="129 212 250 50"
            myDownloadProgressBar=myColorA
            myDownload.section=myColor
            myDownload.type=myColor
            myDownload.label=myColorL
            myDownload.value=myAccent1

        // 音乐
            // 左侧列表
            myMusicListText=myAccent1
            myMusicListText.selected=myColor
            // 右侧详情
            myMusicDetailAlbum.title=myColor
            myMusicDetailAlbum.artist=myColorD
            myMusicDetailAlbum.track=myAccent2
            myMusicDetailAlbum.track.hover=myColor
            myMusicDetailAlbum.info=myColor
            // 播放列表
            myMusicDetailPlayListNum=myAccent2
            myMusicDetailPlayListItem=myAccent1
            myMusicDetailPlayListItem.hover=myColor
            // 按钮
            //播放专辑
            myMusicBtnPlayAlbum=myColor
            myMusicBtnPlayAlbum.hover=myAccent1
            myMusicBtnPlayAlbum.active=myAccent1
            myMusicBtnPlayAlbumBg=none
            myMusicBtnPlayAlbumBg.hover=myColorA
            myMusicBtnPlayAlbumBg.active=myColor
            // 其他，下面3个
            myMusicBtnOther=myColor
            myMusicBtnOther.hover=myAccent1
            myMusicBtnOther.active=myAccent1
            myMusicBtnOtherBg=none
            myMusicBtnOtherBg.hover=myColorA
            myMusicBtnOtherBg.active=myColor

        // 控制台
            myConsole=myAccent1
            myConsole.selected=myColor
            myConsoleBg=none
            myConsoleBg.selected=myAccent1

            myConsoleError=red500
            myConsoleError.selected=myAccent1
            myConsoleErrorBg=none
            myConsoleErrorBg.selected=red500

        // 菜单
            myMenuBg="38 50 56 255"
            myMenuItemText="238 255 255 255"
            myMenuItemText.hover="128 203 169 255"
            myMenuItemText.selected=myMenuItemText.hover

            myMenuItemBg=myMenuBg
            myMenuItemBg.hover="25 34 39 255"
            myMenuItemBg.selected=myMenuItemBg.hover
            myMenuItemDivider="118 132 136 255"

        //下拉选择 （ComboBoxButtom）
            myComboText=myAccent1
            myComboText.hover=myAccent1
            myComboText.focus=myAccent1
            myComboText.focus.hover=myAccent1

            myComboBg=myColorA
            myComboBg.hover=myColorA
            myComboBg.focus=myColorA
            myComboBg.focus.hover=myColorA

            myComboBgBorder=myColorAD
            myComboBgBorder.hover=myColorAD
            myComboBgBorder.focus=myColorAD
            myComboBgBorder.focus.hover=myColorAD

        // 标签头（PageTab）
            myPageTabText=myAccent1
            myPageTabText.hover=myPageTabText
            myPageTabText.selected=myPageTabText
            myPageTabText.selected.hover=myPageTabText
            myPageTabText.focus=myPageTabText

            myPageTabBg=myColor900
            myPageTabBg.hover=myPageTabBg
            myPageTabBg.selected=myColor
            myPageTabBg.selected.hover=myPageTabBg.selected
            myPageTabBg.focus=myPageTabBg.selected

        // 切换按钮 （ToggleButton）
            myToggleText=myAccent1
            myToggleText.focus=myToggleText
            myToggleText.selected=myAccent1
            myToggleText.hover=myAccent1

            myToggleBg=myColorA
            myToggleBg.hover=myToggleBg
            myToggleBg.selected=myColorAD
            myToggleBg.focus=myToggleBg.selected

            myToggleBorder=myToggleBg
            myToggleBorder.hover=myToggleBorder
            myToggleBorder.selected=myToggleBg.selected
            myToggleBorder.focus=myToggleBorder.selected


        DragDrop.DragFrame        "255 255 255 192"
        DragDrop.DropFrame        "150 255 150 255"

        Frame.ClientInsetX        10
        Frame.ClientInsetY        35
        Frame.FocusTransitionEffectTime   "0"     // time it takes for a window to fade in/out on focus/out of focus
        Frame.TransitionEffectTime      "0.25"      // time it takes for a window to fade in/out on open/close
        Frame.OnDragAlphaDelayTime      "0.15"      // time it takes after clicking the title bar of a window before the alpha multiplier kicks in
        Frame.OnDragAlphaMultiplier     "1.0"     // multiplier applied to alpha while dragging a frame
        Frame.AutoSnapRange         "6"
        Frame.UsesAlphaBlending       1
        FrameSystemButton.Icon        ""
        FrameSystemButton.DisabledIcon    ""

        Notifications.PanelPosition     "BottomRight"   // Can be "BottomRight", "BottomLeft", "TopRight", "TopLeft"
        Notifications.PanelPosition     "TopRight" [$OSX]  // the dock is on the bottom for OSX, so instead pop top right like other apps do
        Notifications.SlideDirection    "Vertical"    // Can be "Vertical", "Horizontal", "None" and controls slide effect
        Notifications.FadeInTime      "0.45"    // Controls the time it takes to slide/fade into view
        Notifications.FadeOutTime     "0.45"    // Controls the time it takes to slide/fade out of view
        Notifications.DisplayTime     "6.0"     // Controls the length of time at steady state after fade in and before fade out
        Notifications.StackSize       "3"     // Controls how many panels we will stack before background queuing

        ListPanel.TextColor       Text
        ListPanel.BgColor       none
        ListPanel.SelectedTextColor     TextentrySelected
        ListPanel.SelectedBgColor     TextSelectedBG
        ListPanel.SelectedOutOfFocusBgColor   ClientBG
        ListPanel.DisabledTextColor     TextDisabled
        ListPanel.DisabledSelectedTextColor   ClientBG
        ListPanel.EmptyListInfoTextColor    Label
        ListPanel.PerPixelScrolling     1
        ListPanel.PostSectionLeading	10

		// Default tooltip delay pops fast, but lets the mouse pass through without popping
		// Anchor=Cursor makes it stick to initial pop location like windows implementation.
		// Anchor can also be 'Float' to move with the mouse, or 'Parent' to stick just outside
		// the parent panel (useful for icon sized items)
		Tooltip.Delay=75
		Tooltip.Anchor=Cursor


        WizardPanel.HeaderBGColor     HeaderDialog

        Menu.TextInset          "6"

        PropertySheet.TransitionEffectTime    "0"     // time to change from one tab to another
        PropertySheet.TabGap        1
        PropertySheet.FlashTabColor	"76 159 191 255"

        RichText.InsetX         8
        RichText.InsetY         7

        // 滚动条宽度
        ScrollBar.Wide          10

        SectionedListPanel.CollapserWidth   16

        HTML.SearchInsetY 5
        HTML.SearchInsetX 10
        HTML.SearchWide 348
        HTML.SearchTall 38
        HTML.SearchAnimationTime 0.25

        HTML.IMEInsetY 5
        HTML.IMEInsetX 10
        HTML.IMEWide 348
        HTML.IMETall 38
        HTML.IMEAnimationTime 0.25

        html.secureurl "126 166 75 255"
        html.insecureurl "173 69 72 255"

        MessageBox.ButtonHeight		24

        TextEntry.IMEBGColor        "225 225 225 255"
        TextEntry.IMEFGColor        "black"


        // Friends List colors
        Friends.InGameColor       "144 186 60 255"
        Friends.InGameHoverColor  "182 235 76 255"
        Friends.OnlineColor		   "84 165 196 255"
        Friends.OnlineHoverColor	"104 203 242 255"
        Friends.OfflineColor      "127 127 127 255"
        Friends.OfflineHoverColor "185 185 185 255"
        Friends.PanelDefault      "Label"
        Friends.PanelOver       "Text"
        Friends.PanelSelected     "ClientBG"
        Friends.SectionHeader     "Label"
        Friends.NoAvatarOver      "Text"
        Friends.IgnoredColor      "White"
        Friends.ListHeaderFadeOut	"54 54 54 0"
        Friends.GoldenColor       "255 255 99 255"
        //	Friends.GoldenColor       "228 202 99 255"
        Friends.GoldenHoverColor       "255 255 180 255"
        //	Friends.GoldenHoverColor       "248 218 109 255"


        ChatDialog.URLColor       "text"
        ChatOwnTextColor        "Label"
            ChatDialog.HistoryColor	"124 124 124 255"
        ChatGradientTop         "39 39 39 255"
        ChatGradientBottom        "104 104 104 255"

        AchievementPopup.TitleColor   "Text"
        AchievementPopup.DescriptionColor "180 180 180 255"

        GiftOnlyInfo.ImagePanelColor  "GrayBG"

            dd_texture_bottom "16 16 16 255"
    }

    styles {

        downarrow {
            image="graphics/icon_down_default"
        }
        downarrow:hover {
            image="graphics/icon_down_hover"
            render_bg {
                //background
                0="fill( x0 + 5, y0 + 4, x1 - 2, y1 - 4, buttonfaceactive )"
                //lines around
                1="fill(x0 + 4, y0 + 5, x0 + 5, y1 - 5, buttonfaceactive )"  //left
                2="fill(x1 - 2, y0 + 5, x1 - 1, y1 - 5, buttonfaceactive )"  //right
            }
        }
        uparrow {
            image="graphics/icon_up_default"
        }
        rightarrow {
            image="graphics/icon_right_default"
        }
        rightarrow:hover {
            image="graphics/icon_right_hover"
        }


        // "Page Button" {
        //     render_bg {
        //         // background fill
        //         0="gradient( x0, y0, x1, y1, buttonface2, propertysheetbg )"
        //     }
        // }
        // "Page Button:hover" {
        //     textcolor="TextHover"
        //     render_bg {
        //         // background fill
        //         0="gradient( x0, y0, x1, y1, buttonfaceactive, propertysheetbg )"
        //     }
        // }
        // "Page Button:active" {
        //     textcolor="TextHover"
        //     render_bg {
        //         // background fill
        //         0="gradient( x0, y0, x1, y1, DialogBG, propertysheetbg )"
        //     }
        // }
        // "Page Button:focus" {
        //     textcolor="TextHover"
        //     render_bg {
        //         0="gradient( x0, y0, x1, y1,  buttonfacefocus, propertysheetbg )"
        //     }
        // }
        // "Page Button:selected" {
        //     textcolor="TextHover"
        //     render_bg {
        //         // background fill
        //         0="gradient( x0, y0, x1, y1, buttonfaceactivefocus, propertysheetbg )"
        //     }
        // }
        // "Page Button:disabled" {
        //     textcolor="LabelDisabled"
        //     render_bg {
        //         // background fill
        //         0="gradient( x0, y0, x1, y1, buttonfacedisabled, buttonfacedisabled )"
        //     }
        // }

        Button {
            font-family=basefont
            font-size=16
			font-weight=600
			padding=5
            textcolor=myBtnText
            bgcolor=none
            render_bg {
                0="fill(x0+2, y0+2, x1, y1-2, myBtnBg)"

                1="fill(x0,     y0,     x1,     y0+2,   myBtnBgBorder)"
                2="fill(x0,     y0+2,   x0+2,   y1-2,   myBtnBgBorder)"
                3="fill(x1-2,   y0+2,   x1,     y1-2,   myBtnBgBorder)"
                4="fill(x0,     y1-2,   x1,     y1,     myBtnBgBorder)"
            }
        }
        Button:hover {
            textcolor=myBtnText.hover
            // bgcolor=myBtnBg.active
            render_bg {
                0="fill(x0+2, y0+2, x1, y1-2, myBtnBg.hover)"

                1="fill(x0,     y0,     x1,     y0+2,   myBtnBgBorder.hover)"
                2="fill(x0,     y0+2,   x0+2,   y1-2,   myBtnBgBorder.hover)"
                3="fill(x1-2,   y0+2,   x1,     y1-2,   myBtnBgBorder.hover)"
                4="fill(x0,     y1-2,   x1,     y1,     myBtnBgBorder.hover)"
            }
        }
        Button:active {
            textcolor=myBtnText.active
            render_bg {
                0="fill(x0+2, y0+2, x1, y1-2, myBtnBg.active)"

                1="fill(x0,     y0,     x1,     y0+2,   myBtnBgBorder.active)"
                2="fill(x0,     y0+2,   x0+2,   y1-2,   myBtnBgBorder.active)"
                3="fill(x1-2,   y0+2,   x1,     y1-2,   myBtnBgBorder.active)"
                4="fill(x0,     y1-2,   x1,     y1,     myBtnBgBorder.active)"
            }
        }
        Button:disabled {
            textcolor=myBtnText.disabled
            render_bg {
                0="fill(x0+2, y0+2, x1, y1-2, myBtnBg.disabled)"

                1="fill(x0,     y0,     x1,     y0+2,   myBtnBgBorder.disabled)"
                2="fill(x0,     y0+2,   x0+2,   y1-2,   myBtnBgBorder.disabled)"
                3="fill(x1-2,   y0+2,   x1,     y1-2,   myBtnBgBorder.disabled)"
                4="fill(x0,     y1-2,   x1,     y1,     myBtnBgBorder.disabled)"
            }
        }
        Button:focus {}
        Button:selected {}

        CFriendsListSectionAffordance {
            inset="0 0 0 0"
            font-size=14
            font-weight=400
            textcolor="Label"
        }

        CFriendsListSectionHeader {
            bgcolor=none
            font-family=basefont
            font-size=14
            font-size=13 [$OSX]
            font-weight=400
            textcolor="texthover"
            inset="0 2 0 0"
            render_bg {
                0="gradient_horizontal( x0-21, y0+1, x0+230, y1+1, propertysheetbg, Friends.ListHeaderFadeOut )"
            }
        }

        CFriendPanel {
            inset="0 2 0 0"
            bgcolor=none
            font-family=basefont
            font-size=14
            font-size=13 [$OSX]
            font-weight=400
            textcolor="label"
        }

        CheckButton {
            font-family=basefont
            font-size=14
            font-weight=400
            textcolor="Label"
            image="graphics/chkUnselStd"
        }
        CheckButton:selected {
            image="graphics/chkSelStd"
        }
        CheckButton:focus {
            textcolor="Text"
            bgcolor=none
            image="graphics/chkUnselFocus"
        }
        CheckButton:selected:focus {
            textcolor="Texthover"
            render_bg {}
            bgcolor=none
            image="graphics/chkSelFocus"
        }
        CheckButton:disabled {
            textcolor="TextDisabled"
            bgcolor=none
            image="graphics/chkUnselDis"
        }
        CheckButton:selected:disabled {
            textcolor="TextDisabled"
            bgcolor=none
            //!! bug - this needs to look disabled
            image="graphics/chkSelDis"
        }

        IndeterminateCheckButton {
            font-family=basefont
            font-size=14
            font-weight=400
            textcolor="Label"
            bgcolor=none
            image="graphics/chkIndeterminate"
        }

        CheckButtonList {
            inset="1 1 1 1"
            textcolor="text2"
            bgcolor=none
            render	{ }
            render_bg {
                // background gradient
                1="gradient( x0, y0, x1, y1, dialogbg, almostblack )"
            }
        }
        CheckButtonList:scrollbar {
            inset="1 1 1 1"
            textcolor="text2"
            bgcolor=none
            render	{ }
            render_bg {
                // background gradient
                1="gradient( x0, y0, x1, y1, dialogbg, almostblack )"
            }
        }

        "Page CheckButtonList" {
            inset="1 1 1 1"
            textcolor="text2"
            bgcolor=none
            render	{ }
            render_bg {
                // background fill
                1="gradient( x0, y0, x1, y1, dialogbg, almostblack )"
            }
        }

        "Page CheckButtonList:scrollbar" {
            inset="1 1 1 1"
            textcolor="text2"
            bgcolor=none
            render { }
            render_bg {
                // background fill
                1="gradient( x0+1, y0, x1-1, y1-2, dialogbg, almostblack )"
            }
        }

        "CheckbuttonList Checkbutton" {
            textcolor="label"
        }

        "CheckbuttonList Checkbutton:focus" {
            textcolor="texthover"
        }

        ComboBox {
            inset="6 0 6 0"
            textcolor=myComboText
            font-family=basefont
            font-size="14"
            bgcolor=none
            render_bg {
                0="fill(x0+2, y0+2, x1, y1-2, myComboBg)"

                1="fill(x0,     y0,     x1,     y0+2,   myComboBgBorder)"
                2="fill(x0,     y0+2,   x0+2,   y1-2,   myComboBgBorder)"
                3="fill(x1-2,   y0+2,   x1,     y1-2,   myComboBgBorder)"
                4="fill(x0,     y1-2,   x1,     y1,     myComboBgBorder)"
            }
        }
        ComboBox:hover {
            textcolor=myComboText.hover
            render_bg {
                0="fill(x0+2, y0+2, x1, y1-2, myComboBg.hover)"

                1="fill(x0,     y0,     x1,     y0+2,   myComboBgBorder.hover)"
                2="fill(x0,     y0+2,   x0+2,   y1-2,   myComboBgBorder.hover)"
                3="fill(x1-2,   y0+2,   x1,     y1-2,   myComboBgBorder.hover)"
                4="fill(x0,     y1-2,   x1,     y1,     myComboBgBorder.hover)"
            }
        }
        ComboBox:focus {
            textcolor=myComboText.focus
            render_bg {
                0="fill(x0+2, y0+2, x1, y1-2, myComboBg.focus)"

                1="fill(x0,     y0,     x1,     y0+2,   myComboBgBorder.focus)"
                2="fill(x0,     y0+2,   x0+2,   y1-2,   myComboBgBorder.focus)"
                3="fill(x1-2,   y0+2,   x1,     y1-2,   myComboBgBorder.focus)"
                4="fill(x0,     y1-2,   x1,     y1,     myComboBgBorder.focus)"
            }
        }
        ComboBox:focus:hover {
            textcolor=myComboText.focus.hover
            render_bg {
                0="fill(x0+2, y0+2, x1, y1-2, myComboBg.focus.hover)"

                1="fill(x0,     y0,     x1,     y0+2,   myComboBgBorder.focus.hover)"
                2="fill(x0,     y0+2,   x0+2,   y1-2,   myComboBgBorder.focus.hover)"
                3="fill(x1-2,   y0+2,   x1,     y1-2,   myComboBgBorder.focus.hover)"
                4="fill(x0,     y1-2,   x1,     y1,     myComboBgBorder.focus.hover)"
            }
        }

        // "Page ComboBox" {
        //     render_bg {
        //         // background fill
        //         0="gradient( x0, y0, x1, y1, buttonface2, propertysheetbg )"
        //     }
        // }
        // "Page ComboBox:focus" {
        //     render_bg {
        //         // background fill
        //         0="gradient( x0, y0, x1, y1, buttonfaceactive, propertysheetbg )"
        //     }
        // }
        // "Page ComboBox:hover" {
        //     render_bg {
        //         // background fill
        //         0="gradient(x0, y0, x1, y1, buttonfacehover, propertysheetbg )"
        //     }
        // }
        // "Page ComboBox:focus:hover" {
        //     render_bg {
        //         // background fill
        //         0="gradient( x0, y0, x1, y1, buttonfaceactive, propertysheetbg )"
        //     }
        // }


        ComboBoxButton {
            bgcolor=none
            image="graphics/icon_down_default"
            render_bg{}
        }
        ComboBoxButton:hover {
            image="graphics/icon_down_hover"
            render_bg {}
        }
        ComboBoxButton:focus {
            image="graphics/icon_down_focus"
            render_bg {}
        }
        ComboBoxButton:focus:hover {
            image="graphics/icon_down_default"
            render_bg {}
        }

        // "Page ComboBoxButton" {
        //     bgcolor=none
        //     image="graphics/icon_down_default"
        //     // just draw a single line to divide it from the text
        //     render_bg {
        //         0="fill( x0, y0 + 2, x0 + 1, y1 - 4, ButtonBorderPage )"
        //     }
        // }
        // "Page ComboBoxButton:hover" {
        //     image="graphics/icon_down_hover"
        //     // just draw a single line to divide it from the text
        //     render_bg {
        //         0="fill( x0, y0 + 2, x0 + 1, y1 - 4, ButtonBorderActive  )"
        //     }
        // }
        // "Page ComboBoxButton:focus" {
        //     bgcolor=none
        //     image="graphics/icon_down_focus"
        //     // just draw a single line to divide it from the text
        //     render_bg {
        //         0="fill( x0, y0 + 2, x0 + 1, y1 - 4, ButtonBorderActive  )"
        //     }
        // }
        // "Page ComboBoxButton:focus:hover" {
        //     bgcolor=none
        //     image="graphics/icon_down_focus"
        //     // just draw a single line to divide it from the text
        //     render_bg {
        //         0="fill( x0, y0 + 2, x0 + 1, y1 - 4, ButtonBorderActive )"
        //     }
        // }

        Divider {
            bgcolor="none"
            render {
                0="fill( x0, y1 - 1, x1, y1, myDivider)"
            }
        }

        Frame {
            bgcolor="DialogBG"
            render {
                0="gradient_horizontal( x0, y1 - 1, x1 + 1, y1, ClientBG, focus )"
                1="gradient( x1 - 1, y0, x1, y1, ClientBG, focus )"
                2="gradient_horizontal( x0, y0, x1, y0 + 1, focus0, ClientBG )"
                3="gradient( x0, y0, x0 + 1, y1, focus0, ClientBG )"
            }
        }
        Frame:FrameFocus {
            bgcolor="DialogBG"
            render {
                0="gradient_horizontal( x0, y1 - 1, x1 + 1, y1, ClientBG, focus2 )"
                1="gradient( x1 - 1, y0, x1, y1, ClientBG, focus2 )"
                2="gradient_horizontal( x0, y0, x1, y0 + 1, focus, ClientBG )"
                3="gradient( x0, y0, x0 + 1, y1, focus, ClientBG )"
            }
        }

        FrameBRGripPanel {
            image=graphics/resizer
        }
        FrameBRGripPanel:hover {
            image=graphics/resizer_over
        }

        FrameMinimizeButton {
            render_bg {}
            image="graphics/win32_win_min"
            image="graphics/osx_win_dis" [$OSX]
        }
        FrameMinimizeButton:hover {
            render_bg {}
            bgcolor="none"
            image="graphics/win32_win_min_hover"
            image="graphics/osx_min_hov" [$OSX]
        }
        FrameMinimizeButton:framefocus [$OSX] {
            render_bg {}
            bgcolor="none"
            image="graphics/osx_min_def"
        }
        FrameMinimizeButton:framefocus:hover [$OSX] {
            render_bg {}
            bgcolor="none"
            image="graphics/osx_min_hov"
        }
        FrameMinimizeButton:active [$OSX] {
            render_bg {}
            bgcolor="none"
            image="graphics/osx_min_down"
        }

        // need the maximize button to have different styles for OSX & win32
        FrameMaximizeButton {
            render_bg {}
            image="graphics/win32_win_max"
            image="graphics/osx_win_dis" [$OSX]
        }
        FrameMaximizeButton:hover {
            render_bg {}
            bgcolor="none"
            image="graphics/win32_win_max_hover"
            image="graphics/osx_max_hov" [$OSX]
        }
        FrameMaximizeButton:framefocus {
            render_bg {}
            bgcolor="none"
            image="graphics/win32_win_max"
            image="graphics/osx_max_def" [$OSX]
        }
        FrameMaximizeButton:framefocus:hover {
            render_bg {}
            bgcolor="none"
            image="graphics/win32_win_max_hover"
            image="graphics/osx_max_hov" [$OSX]
        }
        FrameMaximizeButton:active {
            render_bg {}
            bgcolor="none"
            image="graphics/win32_win_max_hover"
            image="graphics/osx_max_down" [$OSX]
        }

        // these are for when the maximize button becomes the restore button
        FrameRestoreButton {
            render_bg {}
            image="graphics/win32_win_restore"
            image="graphics/osx_win_dis" [$OSX]
        }
        FrameRestoreButton:hover {
            render_bg {}
            bgcolor="none"
            image="graphics/win32_win_restore_hover"
            image="graphics/osx_max_hov" [$OSX]
        }
        FrameRestoreButton:framefocus {
            render_bg {}
            bgcolor="none"
            image="graphics/win32_win_restore"
            image="graphics/osx_max_def" [$OSX]
        }
        FrameRestoreButton:framefocus:hover {
            render_bg {}
            bgcolor="none"
            image="graphics/win32_win_restore_hover"
            image="graphics/osx_max_hov" [$OSX]
        }
        FrameRestoreButton:active {
            render_bg {}
            bgcolor="none"
            image="graphics/win32_win_restore_hover"
            image="graphics/osx_max_down" [$OSX]
        }

        FrameCloseButton {
            render_bg {}
            image="graphics/win32_win_close"
            image="graphics/osx_win_dis" [$OSX]
        }
        FrameCloseButton:hover {
            render_bg {}
            image="graphics/win32_win_close_hover"
            image="graphics/osx_close_hov" [$OSX]
        }
        FrameCloseButton:framefocus [$OSX] {
            render_bg {}
            bgcolor="none"
            image="graphics/osx_close_def"
        }
        FrameCloseButton:framefocus:hover [$OSX] {
            render_bg {}
            bgcolor="none"
            image="graphics/osx_close_hov"
        }
        FrameCloseButton:active [$OSX] {
            render_bg {}
            bgcolor="none"
            image="graphics/osx_close_down"
        }
        FrameCloseButton:disabled {
            render_bg {}
            bgcolor="none"
            image="graphics/win32_win_close_disabled"
            image="graphics/osx_win_dis" [$OSX]
        }

        FrameTitle {
            font-family=basefont
            inset="5 2 0 0"
            inset="0 4 0 0" [$OSX]
            padding-left="0"
            padding-right="64"
            padding-right="0" [$OSX]
            font-size=14
            font-weight=400
            textcolor="buttonborderfocus"
            bgcolor="none"
            render_bg {
                1="gradient( x0, y0, x1, y0 + 48, titlebar, none )"
            }
        }
        FrameTitle:framefocus {
            font-family=basefont
            inset="0 4 0 0" [$OSX]
            font-size=14
            font-weight=400
            bgcolor="none"
            textcolor="texthover"
            textcolor="texthover" [$OSX]
            render_bg {
                2="gradient( x0, y0, x1, y0 + 48, TitleBarfocus, none )"
            }
        }


        "CFriendsDialog SectionedListPanelInterior" {
            bgcolor=none
            inset="-6 -1 -1 -1"
            font-family=basefont
            font-size=14
            font-weight=400
            textcolor="Text"
            selectedtextcolor="TextSelected"
            selectedbgcolor="Focus"
            shadowtextcolor="TextDisabled"	// the color of disabled line items
            render { }
            render_bg { }
        }

        GraphPanel {
            textcolor=Highlight5
            bgcolor=none
            render_bg { }
        }

        HTML {
            bgcolor="none"
            inset="2 2 2 2"
            render_bg {
                0="fill( x0, y0, x1, y1, almostblack )" // bg
            }
        }

        "HTMLFramelessPopup HTML" {
            inset="0 0 0 0"
        }

        Label {
            textcolor="Label"
            selectedtextcolor="Text"
            bgcolor="none"
            font-family=basefont
            font-size=14
            font-weight=400
        }

        ListPanel {
            bgcolor=none
            font-family=basefont
            font-size=14
            font-weight=400
            textcolor=myAccent1
            selectedtextcolor=myColor
            selectedbgcolor=none
            shadowtextcolor="TextDisabled"	// the color of disabled line items
            inset="0 -1 1 1"
        }

        "Page ListPanel" {
            font-family=basefont
            font-size=14
            font-weight=400
            textcolor="Text2"
            selectedtextcolor="TextSelected"
            selectedbgcolor="Focus"
            inset="0 -1 1 1"
            bgcolor=none
            render_bg {
                // background fill
                0="gradient( x0, y0, x1, y0 + 80, Propertysheetbg, BackgroundStartOpaque )"
                1="fill( x0, y0 + 80, x1, y1, BackgroundStartOpaque )"
                2="gradient( x0, y0, x1, y0 + 30, backgroundstartsubtle, none )"
            }
        }

        // TODO: 左侧游戏列表样式
        "CGamesListPanel" {
            font-family=basefont
            bgcolor="none"
            font-size=15
            font-weight=400
        }

        // 游戏列表
        "GameItem_Uninstalled" {
            textcolor=myGameListItem.un_install
            selectedtextcolor=myGameListItem.selected
        }
        "GameItem_Uninstalled:hover" {
            textcolor=myGameListItem.selected
            selectedtextcolor=myGameListItem.selected
        }
        "GameItem_Installed" {
            textcolor=myGameListItem.install
            selectedtextcolor=myGameListItem.selected
        }
        "GameItem_Installed:hover" {
            textcolor=myGameListItem.selected
            selectedtextcolor=myGameListItem.selected
        }
        "GameItem_Running" {
            textcolor=blue500
            selectedtextcolor="white"
        }
        "GameItem_Running:hover" {
            textcolor=myGameListItem.selected
            selectedtextcolor=myGameListItem.selected
        }
        "GameItem_Shortcut" {
            textcolor=myGameListItem.selected
            selectedtextcolor="white"
        }
        "GameItem_Shortcut:hover" {
            textcolor=myGameListItem.selected
            selectedtextcolor=myGameListItem.selected
        }
        "GameItem_Mod" {
            textcolor="text"
            selectedtextcolor="white"
        }
        "GameItem_Mod:hover" {
            textcolor=myGameListItem.selected
            selectedtextcolor=myGameListItem.selected
        }
        "GameItem_Updating" {
            textcolor="highlight2"
            selectedtextcolor="highlight1"
        }
        "GameItem_Updating:hover" {
            textcolor="highlight1"
            selectedtextcolor="highlight1"
        }
        "GameItem_Updating:selected" {
            textcolor="highlight1"
            selectedtextcolor="highlight1"
        }
        "GameItem_Decrypting" {
            textcolor="highlight2"
            selectedtextcolor="highlight1"
        }
        "GameItem_Decrypting:hover" {
            textcolor="highlight1"
            selectedtextcolor="highlight1"
        }
        "GameItem_Decrypting:selected" {
            textcolor="highlight1"
            selectedtextcolor="highlight1"
        }
        "GameItem_Syncing" {
            textcolor="highlight2"
            selectedtextcolor="highlight1"
        }
        "GameItem_Syncing:hover" {
            textcolor="highlight1"
            selectedtextcolor="highlight1"
        }
        "GameItem_Syncing:selected" {
            textcolor="highlight1"
            selectedtextcolor="highlight1"
        }
        "GameItem_LockedSiteLicense" {
            textcolor="labeldisabled"
            selectedtextcolor="label"
        }
        "GameItem_LockedSiteLicense:hover" {
            textcolor="label"
            selectedtextcolor="label"
        }
        "GameColumn_BigText" {
            font-family=basefont
            font-size=17
            font-weight=700
            textcolor="text"
        }

        ListPanelCheckBox {
            font-family=basefont
            font-size=14
            font-weight=400
            textcolor="Label"
            image="graphics/chkUnselStd_Sm"
            inset="0 5 0 0"
        }
        ListPanelCheckBox:selected {
            image="graphics/chkSelStd_Sm"
        }

        ListPanelCheckBox:focus {
            textcolor="TextSelected"
            bgcolor=none
            image="graphics/chkUnselFocus_Sm"
        }
        ListPanelCheckBox:selected:focus {
            textcolor="TextSelected"
            render_bg {}
            bgcolor=none
            image="graphics/chkSelFocus_Sm"
        }
        ListPanelCheckBox:disabled {
            textcolor="TextDisabled"
            bgcolor=none
            image="graphics/chkUnselDis_Sm"
        }
        ListPanelCheckBox:disabled:select {
            textcolor="TextDisabled"
            bgcolor=none
            //!! bug - this needs to look disabled
            image="graphics/chkUnselDis"
        }

        "ListPanelColumnheader ListPanelCheckBox" {
            font-family=basefont
            font-size=14
            font-weight=400
            textcolor="Label"
            image="graphics/chkUnSelFocus_Sm"
            inset="4 0 0 0"
        }
        "ListPanelColumnHeader ListPanelCheckBox:selected" {
            inset="4 0 0 0"
            image="graphics/chkUnSelStd_Sm"
        }
        "ListPanelColumnheader ListPanelCheckBox:focus" {
            font-family=basefont
            font-size=14
            font-weight=400
            textcolor="TextHover"
            image="graphics/chkUnSelFocus_Sm"
            inset="4 0 0 0"
        }
        "ListPanelColumnheader ListPanelCheckBox:selected:focus" {
            textcolor="TextHover"
            render_bg {}
            bgcolor=none
            image="graphics/chkSelFocus_Sm"
            inset="4 0 0 0"
        }

        ListPanelColumnheader {
            font-family=basefont
            font-size=14
            font-size=13 [$OSX]
            font-weight=400
            textcolor="label"
            font-style="uppercase"
            bgcolor="none"
            render_bg {
                // fill
                // 0="fill (x0, y0 + 1, x1, y1 + 1, propertysheetbg)" // bg fill
                // 1="fill (x0 + 1, y0 + 1, x1, y0 + 3, propertysheetbg)" // bg fill2
            }
        }

        ListPanelColumnHeader:hover {
            textcolor="Texthover"
        }

        "Csteamrootdialog ListPanelColumnheader" {
            font-family=basefont
            font-size=18
            font-weight=600
            textcolor=white
            font-style="uppercase"
            // bgcolor=myGameDetailsDLCHeader
            // bgcolor=red-600
            render_bg {
                // 0="fill (x0, y1-1, x1, y1, myGameDetailsDLCHeader)"
            }
        }
        "Csteamrootdialog ListPanelColumnHeader:hover" {}

        "Csteamrootdialog ListPanelSectionCollapser" {
            inset = "0 1 0 1"
            bgcolor=none
            render_bg {
            // TODO: 游戏列表组 图标背景
                //1="fill( x0 , y0, x1, y1 - 1, propertysheetbg  )"
            }
        }

        "CGamesPage_Mini ListPanelSectionCollapser" {
            inset = "0 1 0 1"
            bgcolor=none
            render_bg {
                1="fill( x0 , y0, x1, y1 - 1, propertysheetbg)"
            }
        }

        ListPanelColumnSelectButton {// the games list column chooser
            render {}
        }

        ListPanelColumnSelectButton:hover {
            render {}
        }
        ListPanelColumnSelectButton:selected {
            render {}
        }

        // 表头 分割线 |
        ListPanelDragger {
            bgcolor="none"
            render {}
        }

        ListPanelInterior {
            inset="3 1 0 0"
            font-size=15
            textcolor="text2"
            bgcolor="none"
            render {}
            render_bg {}
        }

        ListPanelInterior:scrollbar {
            bgcolor=none
            inset="3 1 -1 0"
            textcolor="text2"
            render {}
            render_bg {}
        }

        "CSteamRootDialog ListPanel" {
            padding-left=2
            padding-right=2
        }

        "Csteamrootdialog ListPanelInterior" {
            inset="3 0 3 0"
            bgcolor=none
            render_bg {}
        }

        "Csteamrootdialog ListPanelInterior:scrollbar" {
            inset="3 0 -1 0"
            bgcolor=none
            render {}
            render_bg {}
        }

        "Page ListPanelInterior" {
            inset="3 1 -1 0"
            font-size=15
            bgcolor=none
            render {}
            render_bg {
                // background gradient
                0="gradient( x0, y0, x1, y1, dialogbg, almostblack )"
            }
        }

        "Page ListPanelInterior:scrollbar" {
            inset="3 1 -1 0"
            bgcolor=none
            render_bg {
                // background gradient
                0="gradient( x0, y0, x1+16, y1, dialogbg, almostblack )"
            }
        }

        ListPanelSectionHeader {
            inset="2 0 0 0"
            textcolor=label
            font-size=16
            minimum-height=20
            font-style="uppercase"
            bgcolor=none
            render_bg {
                // 0="gradient_horizontal( x0 - 1, y0, x0 + 250, y1 - 1, propertysheetbg, Friends.ListHeaderFadeOut  )"
            }
        }

        ListPanelSectionHeader:hover {
            textcolor=texthover
        }

        "ListPanel RichText" {
            textcolor="Text"
            font-family=basefont
            font-size=15
            bgcolor=none
            render_bg {}
        }

        "ListPanel RichText url" {
            font-size=15
            textcolor="Text"
            font-style=underline
        }

        "ListPanel RichTextInterior" {
            bgcolor=DarkDialogBG
            render_bg {}
            bgcolor=none
        }

        ListPanelSectionCollapser [!$OSX] {
            bgcolor=none
            render_bg {}
            image="graphics/icon_collapse"
            // TODO: 游戏列表组图标间距
            // padding-bottom=-2
        }

        ListPanelSectionCollapser [$OSX] {
            bgcolor=none
            render_bg {}
            image="graphics/icon_collapse_osx"
            inset="-4 0 0 0"
            padding-top=-2
            padding-bottom=-2
        }

        ListPanelSectionCollapser:hover [!$OSX] {
            image="graphics/icon_collapse_hover"
        }

        ListPanelSectionCollapser:hover [$OSX] {
            image="graphics/icon_collapse_over_osx"
        }

        ListPanelSectionCollapser:selected [!$OSX] {
            image="graphics/icon_expand"
        }

        ListPanelSectionCollapser:selected [$OSX] {
            image="graphics/icon_expand_osx"
        }

        ListPanelSectionCollapser:selected:hover [!$OSX] {
            image="graphics/icon_expand_hover"
        }

        ListPanelSectionCollapser:selected:hover [$OSX] {
            image="graphics/icon_expand_over_osx"
        }

        MainNav {
            textcolor="Label"
            selectedtextcolor="Text"
            bgcolor="none"
            font-family=basefont
            font-size=21
            font-weight=700
            font-style="uppercase"
        }

        // 任务栏图标右键菜单
        Menu {
            bgcolor=myMenuBg
            // minimum-height=180
            // padding-right=4
            inset="2 2 2 2"
            render {}
            render_bg {
                0="fill(x0, y0, x0+1, y1, myMenuItemDivider)"
                1="fill(x1-1, y0, x1, y1, myMenuItemDivider)"
                2="fill(x0, y0, x1, y0+1, myMenuItemDivider)"
                3="fill(x0, y1-1, x1, y1, myMenuItemDivider)"
            }
            // corner_rounding=1
        }

        MenuBar {
            bgcolor=dialogbg
            padding-right=1
            padding-left=6
            padding-top=2
            padding-bottom=-2
        }

        "Page MenuBar" {
            bgcolor=none
        }

        "MenuBar MenuButton" {
            textcolor="buttonborder"
            padding-right=-2
            inset="-2 0 2 0"
        }

        "MenuBar MenuButton:frameFocus" {
            textcolor="labeldisabled"
        }

        "MenuBar MenuButton:frameFocus:hover" {
            textcolor="texthover"
            bgcolor=none
            render_bg {}
        }

        "MenuBar MenuButton:frameFocus:selected" {
            textcolor="texthover"
            bgcolor=none
            render_bg {}
        }

        MenuButton {
            font-family=basefont
            font-size=14
            font-weight=400
            textcolor="scrollglyph"
            bgcolor="none"
            render_bg {}
        }
        MenuButton:hover {
            textcolor="white"
        }
        MenuButton:selected {
            textcolor="white"
        }

        MenuItem {
            font-family=basefont
            font-size=16
            font-weight=400
            padding=4
            extra=200
            textcolor=myMenuItemText
            bgcolor=myMenuItemBg
            render_bg {}
        }
        MenuItem:selected {
            textcolor=myMenuItemText.selected
            bgcolor=myMenuItemBg.selected
        }
        MenuItem:hover {
            textcolor=myMenuItemText.hover
            bgcolor=myMenuItemBg.hover
        }
        MenuItem:disabled {
            textcolor="labeldisabled"
            shadowtextcolor=none
        }
        MenuItem:disabled:hover {
            textcolor="labeldisabled"
            shadowtextcolor=none
        }

        MenuSeparator {
            inset="6 1 1 0"
            textcolor=myMenuItemDivider
            bgcolor=none
        }

        // 游戏中消息
        Notification {
            font-family=basefont
            font-size=15
            font-weight=400
            bgcolor=none
            render {}
            render_bg {
                0="gradient( x0, y0, x1, y0+80, DialogBG, ClientBG )"

                1="gradient_horizontal( x0, y1-1, x1, y1, ClientBG, Highlight5 )"    // bottom
                2="gradient( x1-1, y0, x1, y1 , ClientBG, Highlight5 )" // right
                3="fill( x0, y0, x1, y0+1, ClientBG )"  // top
                4="fill( x0, y0, x0+1, y1, ClientBG )" // left
            }
        }


        Page {
            bgcolor=myMainBG
            render_bg {
                // background gradient
                // 0="gradient( x0, y0 + 18, x1, y1, DialogBG, PropertySheetBG )"
            }
        }

        "CSteamRootDialog Page" {
            bgcolor="none"
            render_bg {}
        }

        "Page RadioButtonList" {
            bgcolor="DialogBG"
        }


        PageTab {
            font-family=basefont
            font-size=15
            font-style=Uppercase
            font-weight=700
            bgcolor=none
            textcolor=myPageTabText
            bgcolor=myPageTabBg
            render={}
            render_bg={}
        }
        PageTab:selected {
            textcolor=myPageTabText.selected
            bgcolor=myPageTabBg.selected
        }
        PageTab:hover {
            textcolor=myPageTabText.hover
            bgcolor=myPageTabBg.hover
        }
        PageTab:selected:hover {
            textcolor=myPageTabText.selected.hover
            bgcolor=myPageTabBg.selected.hover
        }
        PageTab:Focus {
            textcolor=myPageTabText.focus
            bgcolor=myPageTabBg.focus
        }


        "PageDragFrame PageTab" {
            font-size=14
            font-style=""
        }

        TabCloseButton {
            render_bg {}
            image="graphics/tiny_x_default"
        }

        TabCloseButton:hover {
            image="graphics/tiny_x_hover"
        }

        Panel {
            font-family=basefont
            font-size=14
            font-weight=400
            textcolor="Text"
            bgcolor="none"
        }

        ProgressBar {
            // textcolor="highlight5a"
            textcolor=myDownloadProgressBar
            bgcolor="none"
            render {
                // 1="image_tiled(x0, y0, x1, y1, graphics/download/progress)"
                // lines around
                // 1="fill( x0 , y0 , x1 , y1, 255,55,52,255 )"  // top
                // 2="fill( x0 + 1, y1 - 2, x1 - 1, y1 - 1, ButtonBorder )"  // bottom
                // 3="fill( x0 + 1, y0 + 1, x0 + 2, y1 - 1, ButtonBorder )"  // left
                // 4="fill( x1 - 2, y0 + 1, x1 - 1, y1 - 1, ButtonBorder )"  // right
            }
        }

        "Page ProgressBar" {
            textcolor="highlight5a"
            bgcolor="none"
            render {
                // lines around
                1="fill( x0 + 1, y0 + 1, x1 - 1, y0 + 2, ButtonBorder )"  // top
                2="fill( x0 + 1, y1 - 2, x1 - 1, y1 - 1, ButtonBorder )"  // bottom
                3="fill( x0 + 1, y0 + 1, x0 + 2, y1 - 1, ButtonBorder )"  // left
                4="fill( x1 - 2, y0 + 1, x1 - 1, y1 - 1, ButtonBorder )"  // right
            }
        }

        PropertyPage {
            bgcolor="PropertySheetBG"
        }

        "CFriendsDialog PropertySheet" {
            bgcolor="none"
        }

        RadioButton {
            font-family=basefont
            font-size=14
            font-weight=400
            textcolor="Label"
            render_bg {}
            image="graphics/RadUnselStd"
            bgcolor=none
        }

        RadioButton:selected {
            render_bg {}
            image="graphics/radSelStd"
        }

        RadioButton:focus {
            textcolor="Texthover"
            bgcolor=none
            image="graphics/radSelDown"
        }

        RadioButton:selected:focus {
            textcolor="Texthover"
            bgcolor=none
            image="graphics/radSelFocus"
        }

        RadioButtonList {
            bgcolor="none"
            inset="-2 0 0 0"
            render_bg {
                0="gradient( x0, y0, x1, y1, DialogBG, ClientBG  )"
            }
        }

        RichText {
            textcolor=myColor
            selectedtextcolor=myColor
            selectedbgcolor=myAccent1
            font-family=basefont
            font-size=14
            font-weight=400
            //inset="-1 -1 0 0"
            render_bg {
                -1="fill( x0 + 1, y0 + 1, x1 - 1, y1 - 1, DialogBG )"

                // lines around
                1="fill( x0 + 1, y0 + 1, x1 - 1, y0 + 2, ButtonBorder )"  // top
                2="fill( x0 + 1, y1 - 1, x1 - 1, y1, ButtonBorder )"  // bottom
                3="fill( x0 + 1, y0 + 1, x0 + 2, y1 - 1, ButtonBorder )"  // left
                4="fill( x1 - 2, y0 + 1, x1 - 1, y1 - 1, ButtonBorder )"  // right
            }
        }

        RichTextInterior {
            bgcolor=none
        }

        // style of links in a rich text control

        "RichText url" {
        font-size=14
            // textcolor="label"
            // selectedtextcolor=myColor
            font-style=underline
        }

        "RichText url:hover" {
            textcolor="Texthover"
        }

        "CFriendPanel RichText URL" {
            textcolor="text"
            font-style=underline
            font-size=14
        }

        // style of bold text in a rich text control
        "RichText bold" {
            font-size=15
            font-weight=1000
        }

        "RichText emphasis" {
            font-size=15
            font-style=italic
        }

        SectionedListPanel {
            bgcolor="propertysheetbg"
            font-family=basefont
            font-size=14
            font-weight=400
            textcolor="Text"
            selectedtextcolor="TextSelected"
            selectedbgcolor="Focus"
            bgcolor="none"
            render {}
            render_bg {
                // background fill
                //0="gradient( x0, y0, x1, y0 + 140, dialogbg, almostblack )"
                //1="fill( x0, y0 + 140, x1, y1, almostblack )"
            }
            inset="1 -1 1 1"
        }

        "CFriendsDialog SectionedListPanel" {
            bgcolor="none"
            font-family=basefont
            font-size=14
            font-weight=400
            textcolor="Text"
            selectedtextcolor="TextSelected"
            selectedbgcolor="Focus"
            render {}
            render_bg {
                // background fill
                0="gradient( x0, y0, x1, y0 + 140, dialogbg, almostblack )"
                1="fill( x0, y0 + 140, x1, y1, almostblack )"
            }
        }

        SectionedlistpanelCollapser {
            render_bg {}
            bgcolor=none
            image="graphics/icon_collapse"
            inset="2 1 0 0"
        }

        SectionedListPanelCollapser:hover {
            image="graphics/icon_collapse_over"
        }

        SectionedListPanelCollapser:selected {
            image="graphics/icon_expand"
        }

        SectionedListPanelCollapser:selected:hover {
            image="graphics/icon_expand_hover"
        }

        Slider {
            font-family=basefont
            font-size=10
            font-weight=400
            textcolor="label"
            font-style=uppercase
        }

        Slider:focus {
            textcolor="Text"
        }

        StatusLabel {
            font-family=basefont
            font-size=14
            font-weight=400
            textcolor="labelfocus"
            font-style=uppercase
        }

        StatusLabelDim {
            font-family=basefont
            font-size=14
            font-weight=400
            textcolor="TextDisabled"
            font-style=normal
        }

        StatusLabel:hover {
            font-family=basefont
            font-size=14
            font-weight=400
            textcolor="white"
            font-style=uppercase
        }

        TextEntry {
            font-family=basefont
            font-size=14
            textcolor="Text"
            font-weight=400
            bgcolor="none"
            selectedtextcolor="white"
            selectedbgcolor="TextSelectedBG"
            shadowtextcolor="text"  // this is the cursor color

            inset-left=4
            inset-top=0
            render {
                // lines around
                1="fill( x0 + 1, y0 + 1, x1 - 1, y0 + 2, ButtonBorder )"  // top
                2="fill( x0 + 1, y1 - 2, x1 - 1, y1 - 1, ButtonBorder )"  // bottom
                3="fill( x0 + 1, y0 + 1, x0 + 2, y1 - 1, ButtonBorder )"  // left
                4="fill( x1 - 2, y0 + 1, x1 - 1, y1 - 1, ButtonBorder )"  // right
            }
        }

        "Page TextEntry" {
            render {
                // lines around
                1="fill( x0 + 1, y0 + 1, x1 - 1, y0 + 2, ButtonBorder )"  // top
                2="fill( x0 + 1, y1 - 2, x1 - 1, y1 - 1, ButtonBorder )"  // bottom
                3="fill( x0 + 1, y0 + 1, x0 + 2, y1 - 1, ButtonBorder )"  // left
                4="fill( x1 - 2, y0 + 1, x1 - 1, y1 - 1, ButtonBorder )"  // right
            }
        }

        TextEntry:focus {
            textcolor="TextHover"
            bgcolor=none
            render {
                // lines around
                1="fill( x0 + 1, y0 + 1, x1 - 1, y0 + 2, ButtonBorderFocus )"  // top
                2="fill( x0 + 1, y1 - 2, x1 - 1, y1 - 1, ButtonBorderFocus )"  // bottom
                3="fill( x0 + 1, y0 + 1, x0 + 2, y1 - 1, ButtonBorderFocus )"  // left
                4="fill( x1 - 2, y0 + 1, x1 - 1, y1 - 1, ButtonBorderFocus )"  // right
            }
        }

        "Page TextEntry:focus" {
            textcolor="TextHover"
            render {
                // lines around
                1="fill( x0 + 1, y0 + 1, x1 - 1, y0 + 2, ButtonBorderFocus )"  // top
                2="fill( x0 + 1, y1 - 2, x1 - 1, y1 - 1, ButtonBorderFocus )"  // bottom
                3="fill( x0 + 1, y0 + 1, x0 + 2, y1 - 1, ButtonBorderFocus )"  // left
                4="fill( x1 - 2, y0 + 1, x1 - 1, y1 - 1, ButtonBorderFocus )"  // right
            }
        }


        TextEntry:disabled {
            textcolor="TextDisabled"
            bgcolor="ButtonFaceDisabled"
            render {
                // lines around
                1="fill( x0 + 1, y0 + 1, x1 - 1, y0 + 2, ButtonBorderDisabled )"  // top
                2="fill( x0 + 1, y1 - 2, x1 - 1, y1 - 1, ButtonBorderDisabled )"  // bottom
                3="fill( x0 + 1, y0 + 1, x0 + 2, y1 - 1, ButtonBorderDisabled )"  // left
                4="fill( x1 - 2, y0 + 1, x1 - 1, y1 - 1, ButtonBorderDisabled )"  // right
            }
        }

        // The 'empty' style is used for 'hint text' in text entry fields.
        // If the text box does not have focus and does not have content, a
        // hint text property will be shown with this style. This is comment
        // to pre-fill to box with something like 'Search' that goes away when active
        TextEntry:empty {
            font-style=italic
            textcolor=LabelDisabled
        }

        TextEntryLarge {
            font-family=basefont
            font-size=18
            textcolor="Text"
            font-weight=400
            bgcolor="none"
            selectedtextcolor="TextEntrySelected"
            selectedbgcolor="TextSelectedBG"
            shadowtextcolor="text"  // this is the cursor color

            inset-left=4
            render {
                // lines around
                1="fill( x0 + 1, y0 + 1, x1 - 1, y0 + 2, ButtonBorder )"  // top
                2="fill( x0 + 1, y1 - 2, x1 - 1, y1 - 1, ButtonBorder )"  // bottom
                3="fill( x0 + 1, y0 + 1, x0 + 2, y1 - 1, ButtonBorder )"  // left
                4="fill( x1 - 2, y0 + 1, x1 - 1, y1 - 1, ButtonBorder )"  // right
            }
        }

        TextEntryLarge:focus {
            textcolor="TextHover"
            render {
                // lines around
                1="fill( x0 + 1, y0 + 1, x1 - 1, y0 + 2, ButtonBorderFocus )"  // top
                2="fill( x0 + 1, y1 - 2, x1 - 1, y1 - 1, ButtonBorderFocus  )"  // bottom
                3="fill( x0 + 1, y0 + 1, x0 + 2, y1 - 1, ButtonBorderFocus  )"  // left
                4="fill( x1 - 2, y0 + 1, x1 - 1, y1 - 1, ButtonBorderFocus  )"  // right
            }
        }

        TextEntryLarge:disabled {
            textcolor="TextDisabled"
            bgcolor="ButtonFaceDisabled"
            render {
                // lines around
                1="fill( x0 + 1, y0 + 1, x1 - 1, y0 + 2, ButtonBorderDisabled )"  // top
                2="fill( x0 + 1, y1 - 2, x1 - 1, y1 - 1, ButtonBorderDisabled )"  // bottom
                3="fill( x0 + 1, y0 + 1, x0 + 2, y1 - 1, ButtonBorderDisabled )"  // left
                4="fill( x1 - 2, y0 + 1, x1 - 1, y1 - 1, ButtonBorderDisabled )"  // right
            }
        }

        TextEntryURL {
            font-family=basefont
            font-size=14
            textcolor="text"
            font-weight=400
            bgcolor="none"
            selectedtextcolor="TextEntrySelected"
            selectedbgcolor="TextSelectedBG"
            shadowtextcolor="Text"	// this is the cursor color
            inset-left=0
            inset-top=-1
            render {}
        }

        TextEntryURL:Hover {
            textcolor="texthover"
            render {
                // lines around
                1="fill( x0 + 1, y0 + 1, x1 - 1, y0 + 2, ButtonFaceDisabled )"  // top
                2="fill( x0 + 1, y1 - 2, x1 - 1, y1 - 1, ButtonFaceDisabled )"  // bottom
                3="fill( x0 + 1, y0 + 1, x0 + 2, y1 - 1, ButtonFaceDisabled )"  // left
                4="fill( x1 - 2, y0 + 1, x1 - 1, y1 - 1, ButtonFaceDisabled )"  // right
            }
        }

        ToggleButton {
            inset="0 0 0 0"
            inset="1 3 0 0" [$OSX]
            font-family=basefont
            font-size=13
            font-weight=400

            bgcolor=none
            render={}
            textcolor=myToggleText
            render_bg {
                0="fill(x0+2, y0+2, x1-2, y1-2, myToggleBg)"

                1="fill(x0,     y0,     x1,     y0+2,   myToggleBorder)"
                2="fill(x0,     y0+2,   x0+2,   y1-2,   myToggleBorder)"
                3="fill(x1-2,   y0+2,   x1,     y1-2,   myToggleBorder)"
                4="fill(x0,     y1-2,   x1,     y1,     myToggleBorder)"
            }
        }
        // ToggleButton:focus {
        //     textcolor=myToggleText.focus
        //     render_bg {
        //         0="fill(x0+2, y0+2, x1-2, y1-2, myToggleBg.focus)"

        //         1="fill(x0,     y0,     x1,     y0+2,   myToggleBorder.focus)"
        //         2="fill(x0,     y0+2,   x0+2,   y1-2,   myToggleBorder.focus)"
        //         3="fill(x1-2,   y0+2,   x1,     y1-2,   myToggleBorder.focus)"
        //         4="fill(x0,     y1-2,   x1,     y1,     myToggleBorder.focus)"
        //     }
        // }
        ToggleButton:hover {
            textcolor=myToggleText.hover
            render_bg {
                0="fill(x0+2, y0+2, x1-2, y1-2, myToggleBg.hover)"

                1="fill(x0,     y0,     x1,     y0+2,   myToggleBorder.hover)"
                2="fill(x0,     y0+2,   x0+2,   y1-2,   myToggleBorder.hover)"
                3="fill(x1-2,   y0+2,   x1,     y1-2,   myToggleBorder.hover)"
                4="fill(x0,     y1-2,   x1,     y1,     myToggleBorder.hover)"
            }
        }
        ToggleButton:selected {
            textcolor=myToggleText.selected
            render_bg {
                0="fill(x0+2, y0+2, x1-2, y1-2, myToggleBg.selected)"

                1="fill(x0,     y0,     x1,     y0+2,   myToggleBorder.selected)"
                2="fill(x0,     y0+2,   x0+2,   y1-2,   myToggleBorder.selected)"
                3="fill(x1-2,   y0+2,   x1,     y1-2,   myToggleBorder.selected)"
                4="fill(x0,     y1-2,   x1,     y1,     myToggleBorder.selected)"
            }
        }

        // "Page ToggleButton" {
        //     font-family=basefont
        //     font-size=13
        //     font-weight=400
        //     textcolor="Text"
        //     bgcolor=none
        //     render_bg {
        //         // background fill
        //         0="gradient( x0, y0, x1, y1, buttonface2, propertysheetbg )"
        //     }
        // }

        // "Page ToggleButton:hover" {
        //     textcolor="TextHover"
        //     bgcolor="none"
        //     render_bg {
        //         0="gradient( x0, y0, x1, y1, buttonfacehover, propertysheetbg )"
        //     }
        // }

        // "Page ToggleButton:focus" {
        //     textcolor="TextHover"
        //     bgcolor="none"
        //     render_bg {
        //         0="gradient( x0, y0, x1, y1, buttonfacefocus, propertysheetbg )"
        //     }
        // }

        // "Page ToggleButton:selected" {
        //     textcolor="TextHover"
        //     bgcolor="none"
        //     render_bg {
        //         0="gradient( x0, y0, x1, y1, backgroundstartopaque, propertysheetbg )"
        //     }
        // }


        // the background and frame of a tooltip
        TooltipWindow {
            bgcolor="MenuBG1"
        }

        // body text inside a tooltip
        "TooltipWindow Label" {
            padding-left=4
            textcolor="Text"
        }

        // headline text inside a tooltip
        tooltip_headline {
            textcolor="TextSelected"
            padding-left=4
            padding-top=1
            padding-bottom=0
            font-weight=1000
        }

        TreeNode {
            bgcolor=none
            render_bg {}
        }

        TreeNodeImage {
            bgcolor=none
        }

        TreeViewSubPanel {
            bgcolor=none
        }

        TreeNodeText {
            font-family=basefont
            font-size=13
            textcolor="Text"
            selectedtextcolor="TextSelected"
            selectedbgcolor="TextSelectedBG"
            bgcolor=none
            render {}
            render_bg {}
        }

        TreeView {
            render_bg {
                -1="fill( x0 + 1, y0 + 1, x1 - 1, y1 - 1, none )"

                // lines around
                1="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorder )"  // top
                2="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorder )"  // bottom
                3="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorder )"  // left
                4="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorder )"  // right

                // single pixel fills in the corners
                5="fill( x0 + 2, y0, x1 - 2, y0 + 1, ButtonBorderDisabled )"  // top
                6="fill( x0 + 2, y1 - 1, x1 - 2, y1, ButtonBorderDisabled )"  // bottom
                7="fill( x0, y0 + 2, x0 + 1, y1 - 2, ButtonBorderDisabled )"  // left
                8="fill( x1 - 1, y0 + 2, x1, y1 - 2, ButtonBorderDisabled )"  // right
                11="fill( x0, y0 + 1, x0 + 1, y0 + 2, ButtonBorderDisabled2 )"
                12="fill( x1 - 1, y0 + 1, x1, y0 + 2, ButtonBorderDisabled2 )"
                13="fill( x0, y1 - 2, x0 + 1, y1 - 1, ButtonBorderDisabled2 )"
                14="fill( x1 - 1, y1 - 2, x1, y1 - 1, ButtonBorderDisabled2 )"
                15="fill( x0 + 1, y0, x0 + 2, y0 + 1, ButtonBorderDisabled2 )"
                16="fill( x1 - 2, y0, x1 - 1, y0 + 1, ButtonBorderDisabled2 )"
                17="fill( x0 + 1, y1 - 1, x0 + 2, y1, ButtonBorderDisabled2 )"
                18="fill( x1 - 2, y1 - 1, x1 - 1, y1, ButtonBorderDisabled2 )"
            }
        }

        URLLabel {
            textcolor="label"
            bgcolor="none"
            font-family=basefont
            font-size=14
            font-weight=400
            font-style=underline
        }

        URLLabel:Hover {
            textcolor="texthover"
            font-size=14
        }

        URLLabelSimple {
            textcolor="labelfocus"
            bgcolor="none"
            font-family=basefont
            font-size=14
            font-weight=400
            font-style=regular
        }

        URLLabelSimple [$OSX] {
            textcolor="labelfocus"
            bgcolor="none"
            font-family=basefont
            font-size=13
            font-weight=400
            font-style=regular
        }

        URLLabelSimple:Hover {
            font-style=underline
            textcolor="WHITE"
        }

        URLLabelSimple2 {
            textcolor="labelfocus"
            bgcolor="none"
            font-family=basefont
            font-size=14
            font-weight=400
            font-style=regular
        }

        URLLabelSimple2 [$OSX] {
            textcolor="labelfocus"
            bgcolor="none"
            font-family=basefont
            font-size=13
            font-weight=400
            font-style=regular
        }

        URLLabelSimple2:Hover {
            textcolor="WHITE"
        }

        // Steam-specific styles
        // TODO: 控制台
        CConsoleHistory {
            font-family=basefont
            font-size=14
            font-family="DejaVu Sans Mono" [$LINUX]
            font-size=12 [$LINUX]
            font-family="Menlo" [$OSX]
            font-size=14 [$OSX]
            textcolor="label"
            selectedtextcolor="TextSelected"
            bgcolor=none
            render_bg {
                // background gradient
                // 1="gradient( x0, y0, x1, y1, dialogbg, almostblack )"
                // 1="fill( x0, y0, x1, y1, MyTest )"
            }
        }

        GameColumnHeaderFavorites {
            image="steam/cached/fav_remove"
        }

        CGamesListFavoritesToggle {
            image="steam/cached/fav_addTo"
        }

        CGamesListFavoritesToggle:hover {
            image="steam/cached/fav_addTo_ovr"
        }

        CGamesListFavoritesToggle:selected {
            image="steam/cached/fav_remove"
        }

        CGamesListFavoritesToggle:selected:hover {
            image="steam/cached/fav_remove_ovr"
        }

        WrapPanel {
            inset="0 0 0 0"
            font-family=basefont
            font-size=14
            font-weight=400
            textcolor="Text"
            selectedtextcolor="TextSelected"
            selectedbgcolor="Focus"
            bgcolor=none
            render_bg {
                // background gradient
                1="gradient( x0, y0, x1, y0 + 240, propertysheetbg, DarkDialogBG )"
                2="fill( x0, y0 + 240, x1, y1, DarkDialogBG )"
            }
            inset="1 -1 1 1"
        }

        FullscreenButton {
            bgcolor=none
            render_bg={}
            image="graphics/icon_controller_bpm"
        }
        FullscreenButton:hover {
            image="graphics/icon_controller_bpm_over"
        }
        FullscreenButton:active {
            image="graphics/icon_controller_bpm_down"
        }
        FullscreenButton:disabled {
            image="graphics/icon_controller_bpm_disabled"
        }

        VRButton {
            bgcolor=none
            render_bg={}
            image="graphics/icon_vr"
        }
        VRButton:hover {
            image="graphics/icon_vr_over"
        }
        VRButton:active {
            image="graphics/icon_vr_down"
        }
        VRButton:disabled {
            image="graphics/icon_vr_disabled"
        }

        VRButtonExit {
            bgcolor=none
            render_bg={}
            image="graphics/icon_vr_happy"
        }
        VRButtonExit:hover {
            image="graphics/icon_vr_happy_over"
        }
        VRButtonExit:active {
            image="graphics/icon_vr_happy_down"
        }
        VRButtonExit:disabled {
            image="graphics/icon_vr_disabled"
        }

        // 后退按钮
        BackButton {
            bgcolor=none
            render_bg={}
            image="graphics/url/icon_button_back"
        }
        BackButton:hover {
            image="graphics/url/icon_button_back_down"
        }
        BackButton:active {
            image="graphics/url/icon_button_back_over"
        }
        BackButton:disabled {
            image="graphics/url/icon_button_back_disabled"
        }
        // 前进按钮
        ForwardButton {
            render_bg={}
            image="graphics/url/icon_button_forward"
        }
        ForwardButton:hover {
            image="graphics/url/icon_button_forward_over"
        }
        ForwardButton:active {
            image="graphics/url/icon_button_forward_down"
        }
        ForwardButton:disabled {
            image="graphics/url/icon_button_forward_disabled"
        }

        HomeButton {
            bgcolor=none
            render_bg={}
            image="graphics/icon_button_home"
        }
        HomeButton:hover {
            image="graphics/icon_button_home_over"
        }
        HomeButton:active {
            image="graphics/icon_button_home_down"
        }
        HomeButton:disabled {
            image="graphics/icon_button_home_disabled"
        }

        ReloadButton {
            bgcolor=none
            render_bg={}
            image="graphics/url/icon_button_reload"
        }
        ReloadButton:hover {
            image="graphics/url/icon_button_reload_over"
        }
        ReloadButton:active {
            image="graphics/url/icon_button_reload_down"
        }
        ReloadButton:disabled {
            image="graphics/url/icon_button_reload_disabled"
        }

        StopButton {
            bgcolor=none
            render_bg={}
            image="graphics/url/icon_button_stop"
        }
        StopButton:hover {
            image="graphics/url/icon_button_stop_over"
        }
        StopButton:active {
            image="graphics/url/icon_button_stop_down"
        }
        StopButton:disabled {
            image="graphics/url/icon_button_stop_disabled"
        }

        //T ODO: 游戏详情 面板 标题 style
        gamedetails-headerlabel	{
            font-size=30
            font-weight=700
            font-family=basefont
            textcolor=myGameDetailsChildPanel.title
        }

        gamedetails-headerlabel-red	{
            font-size=30
            font-weight=700
            font-family=basefont
            textcolor=myGameDetailsChildPanel.title
        }
        gamedetails-headerlabel-green {
            font-size=30
            font-weight=700
            font-family=basefont
            textcolor=myGameDetailsChildPanel.title
        }

        gamedetails-headerlabel-blue {
            font-size=30
            font-weight=700
            font-family=basefont
            textcolor=myGameDetailsChildPanel.title
        }

        "html-findbar" {
            font-family=basefont
            font-size=14
            textcolor="text2"
            font-weight=400
            bgcolor="DarkClientBG"
            selectedtextcolor="TextEntrySelected"
            selectedbgcolor="TextSelectedBG"
            shadowtextcolor="Text"	// this is the cursor color
            inset-left=0
            inset-top=0
            render {
                // lines around
                0="fill( x0, y0, x0 + 1, y1, ButtonBorder )"
                1="gradient_horizontal( x0, y0, x1, y0 + 1, ButtonBorder, none )"
                2="gradient_horizontal( x0, y1 - 1, x1, y1, ButtonBorder, none )"
            }
        }

        "html-imebar" {
            font-family=basefont
            font-size=14
            textcolor="text2"
            font-weight=400
            bgcolor="DarkClientBG"
            selectedtextcolor="TextEntrySelected"
            selectedbgcolor="TextSelectedBG"
            shadowtextcolor="Text"	// this is the cursor color
            inset-left=0
            inset-top=0

            render {
                // lines around
                0="fill( x0, y0, x0 + 1, y1, ButtonBorder )"
                1="gradient_horizontal( x0, y0, x1, y0 + 1, ButtonBorder, none )"
                2="gradient_horizontal( x0, y1 - 1, x1, y1, ButtonBorder, none )"
            }
        }


        // styles for text used in RichText controls in various places
        // TODO: 控制台字体
        console_text_error {
            textcolor=myConsoleError
            font-size=17
            font-weight=700
            font-family="DejaVu Sans Mono" [$LINUX]
            font-size=12 [$LINUX]
            font-family="Menlo" [$OSX]
            font-size=16 [$OSX]
            selectedtextcolor=myConsoleError.selected
            selectedbgcolor=myConsoleErrorBg.selected
        }

        console_text {
            font-family=basefont
            font-size=17
            font-family="DejaVu Sans Mono" [$LINUX]
            font-size=12 [$LINUX]
            font-family="Menlo" [$OSX]
            font-size=14 [$OSX]
            textcolor=myConsole
            selectedtextcolor=myConsole.selected
            selectedbgcolor=myConsoleBg.selected
        }

        friends_chat_text {
            textcolor="text"
            selectedtextcolor="TextentrySelected"
            SelectedBgColor="focus"
            font-size=16
        }

        friends_chat_text_self {
            textcolor="ChatOwnTextColor"
            selectedtextcolor="TextentrySelected"
            selectedbgcolor="focus"
            font-size=16
        }

        friends_chat_history {
            textcolor="ChatDialog.HistoryColor"
            selectedtextcolor="TextentrySelected"
            selectedbgcolor="focus"
            font-size=16
        }

        friends_chat_event {
            textcolor="Text"
            font-size=16
            selectedtextcolor="TextentrySelected"
            selectedbgcolor="focus"
        }

        friends_chat_bright_event {
            textcolor="text"
            selectedtextcolor="TextentrySelected"
            font-size=16
            font-weight=1000
        }

        friends_chat_url {
            textcolor="text"
            SelectedBgColor="focus"
            font-style=underline
            font-size=16
            selectedtextcolor="TextentrySelected"
            selectedbgcolor="focus"
        }

        friends_chat_name_ingame {
            textcolor="Friends.InGameColor"
            selectedtextcolor="TextentrySelected"
            selectedbgcolor="focus"
            font-size=16
        }

        friends_chat_name_golden {
            textcolor="Friends.GoldenColor"
            selectedtextcolor="TextentrySelected"
            selectedbgcolor="focus"
            font-size=16
        }


        friends_chat_self {
            textcolor="Friends.OnlineColor"
            selectedtextcolor="TextentrySelected"
            selectedbgcolor="focus"
            font-size=16
        }

        friends_chat_name {
            textcolor="Friends.OnlineColor"
            selectedtextcolor="TextentrySelected"
            selectedbgcolor="focus"
            font-size=16
        }

        friends_chat_accountid {
            selectedtextcolor="TextentrySelected"
            selectedbgcolor="focus"
            textcolor="text"
            font-size=16
        }

        friends_chat_securitylink {
            textcolor="text"
            bgcolor="none"
            font-family=basefont
            font-size=16
            font-weight=400
            font-style=underline
            selectedtextcolor="TextSelected"
            selectedbgcolor="Focus"
        }

        CChatRoomDlg {
            bgcolor="none"
            render {}
            render_bg {}
        }

        ChatListPanel {
            render {}
            render_bg {
                0="gradient( x0, y0, x1 -16, y1, darkdialogbg, almostblack )"
            }
        }


        Chat_MenuButton_withChrome {
            font-family=basefont
            font-style="uppercase"
            font-size="13"
            font-weight=400
            textcolor="text"
            bgcolor="none"
            render_bg {
                // background fill
                0="gradient( x0, y0, x1, y1, buttonface, propertysheetbg )"
            }
            minimum-width=120
        }

        Chat_MenuButton_withChrome:disabled {
            textcolor="LabelDisabled"
            render_bg {
                // background fill
                0="fill( x0, y0, x1, y1, none )"
            }
        }

        // used in friends tooltip and friends list for overriding regular styles with custom colors
        friends_offline {
            textcolor="Friends.OfflineColor"
        }
        friends_offline:hover {
            textcolor="Friends.OfflineHoverColor"
        }
        friends_online {
            textcolor="Friends.OnlineColor"
        }
        friends_online:hover {
            textcolor="Friends.OnlineHoverColor"
        }
        friends_ingame {
            textcolor="Friends.InGameColor"
        }
        friends_ingame:hover {
            textcolor="Friends.InGameHoverColor"
        }
        friends_golden {
            textcolor="Friends.GoldenColor"
        }
        friends_golden:hover {
            textcolor="Friends.GoldenHoverColor"
        }
        friends_ignored {
            textcolor="Friends.IgnoredColor"
        }

        TabPageCloseButton {
            padding-right=16
        }

        SuperNavMenu { bgcolor=myMenuBg
            // minimum-height=180
            // padding-right=4
            inset="2 2 2 2"
            render {}
            render_bg {
                0="fill(x0, y0, x0+1, y1, myMenuItemDivider)"
                1="fill(x1-1, y0, x1, y1, myMenuItemDivider)"
                2="fill(x0, y0, x1, y0+1, myMenuItemDivider)"
                3="fill(x0, y1-1, x1, y1, myMenuItemDivider)"
            }
            // corner_rounding=1
        }

        SuperNavMenuItem {
            font-family=basefont
            font-size=16
            font-weight=400
            padding=4
            extra=200
            textcolor=myMenuItemText
            bgcolor=myMenuItemBg
            render_bg {}
        }
        SuperNavMenuItem:selected {
            textcolor=myMenuItemText.selected
            bgcolor=myMenuItemBg.selected
        }
        SuperNavMenuItem:hover {
            textcolor=myMenuItemText.hover
            bgcolor=myMenuItemBg.hover
        }


        SuperNavMenuDivider {
            // textcolor="none"
            // render {
            //     1="fill( x0+6, y0+1, x1-6, y0+2, SuperDivider )"
            // }
            inset="6 1 1 0"
            textcolor=myMenuItemDivider
            bgcolor=none
        }

        "NotifyRemoteClientTitle" {
            textcolor="LabelDisabled"
        }

        "NotifyRemoteClientInfo" {
            textcolor="176 172 165 255"
        }

    }
}
